<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_white);

uni_resolution_hoz = shader_get_uniform(shd_gaussian_horizontal,"resolution");
uni_resolution_vert = shader_get_uniform(shd_gaussian_vertical,"resolution");
var_resolution_x = view_wview;
var_resolution_y = view_hview;

uni_blur_amount_hoz = shader_get_uniform(shd_gaussian_vertical,"blur_amount");
uni_blur_amount_vert = shader_get_uniform(shd_gaussian_horizontal,"blur_amount");
var_blur_amount = 1.0;

shader_enabled = true;
final_surface = surface_create(view_wview,view_hview);

surf = surface_create(view_wview, view_hview);
view_surface_id[0] = surf;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>surface_free(surf);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if keyboard_check(ord('Q')) var_blur_amount += 0.01;
if keyboard_check(ord('A')) var_blur_amount -= 0.01;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var_mouse_pos_x = mouse_x - view_xview;
var_mouse_pos_y = mouse_y - view_yview;

//Do horizontal blur first
surface_set_target(final_surface);
if shader_enabled shader_set(shd_gaussian_horizontal);
    shader_set_uniform_f(uni_resolution_hoz, var_resolution_x, var_resolution_y);
    shader_set_uniform_f(uni_blur_amount_hoz, var_blur_amount);
    if(surface_exists(surf)){
        draw_surface(surf,0,0);
    }
shader_reset();
surface_reset_target();

//Do vertical blur last
if shader_enabled shader_set(shd_gaussian_vertical);
    shader_set_uniform_f(uni_resolution_vert, var_resolution_x, var_resolution_y);
    shader_set_uniform_f(uni_blur_amount_vert, var_blur_amount);
    draw_surface(final_surface,0,0);
shader_reset();

draw_set_color(c_white);
draw_set_font(font_game_26);
draw_set_halign(fa_center);


if(room != r_menu){
    draw_sprite(spr_recuadro, 1, room_width/2 - sprite_get_width(spr_recuadro)/2, room_height/2 - 30);
    draw_text(room_width/2, room_height/2 - 20, "GAME PAUSED");
    draw_set_halign(noone);
    draw_sprite(spr_play, 0, 696, 24);
    draw_sprite(spr_back, 0, 0, 24);
    if(in_Rectangle(0, 24, sprite_get_width(spr_back), 24 + sprite_get_height(spr_back)) and mouse_check_button_pressed(mb_left)){
        game_pause = false;
        instance_destroy();
        room_goto_transition(r_levels2, 0, 40);
        Play_Button();
    }
}else{
    draw_sprite(spr_recuadro, 0, room_width/2 - sprite_get_width(spr_recuadro)/2, room_height/2 - 30);
    draw_text(room_width/2, room_height/2 - 20, "OPTIONS");
    draw_set_halign(noone);
    draw_sprite(spr_exit, 0, 696, 24);
    if(in_Rectangle(696, 24, 696 + sprite_get_width(spr_back), 24 + sprite_get_height(spr_back)) and mouse_check_button_pressed(mb_left)){
      
        game_pause = false;
        with o_player can_move = true;
        
        instance_destroy();
        Play_Button();
    }   
}

var xp = room_width/2 - sprite_get_width(spr_sound)/2;
var yp = room_height/2 + 30;
    
draw_sprite(spr_sound, sef_pause, xp, yp);



if(in_Rectangle(xp, yp, xp + 46, yp + 46) and mouse_check_button_pressed(mb_left)){
    Play_Button();
    sef_pause = !sef_pause;
}

draw_sprite(spr_music, musica_pause, xp - 36 - 24, yp);
if(in_Rectangle(xp - 36 - 24, yp, xp - 36 - 24 + 46, yp + 46) and mouse_check_button_pressed(mb_left)){
    Play_Button();
    musica_pause = !musica_pause;
}

draw_sprite(spr_idioma, Idioma_Index(idioma), xp + 36 + 24, yp);
if(in_Rectangle(xp + 36 + 24, yp, xp + 36 + 24 + 46, yp + 46) and mouse_check_button_pressed(mb_left)){
    Play_Button();
    idioma = Change_Language(idioma);
}
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>game_end();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>shader_enabled = !shader_enabled;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
