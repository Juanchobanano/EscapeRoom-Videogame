<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_player_idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>s_player_mask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize the player
has_key = false;
can_move = true;
pistas = 0;
Pistas();
initialize_movement_entity(.5, .5, 0, 1, o_solid);
if(room != r_menu){
    instance_create(view_wview[0] - 168 + 15, view_hview[0] - 137 + 15, Key_Jump); // 137
    instance_create(0, view_hview[0] - 156 + 15, Key_Left); // 156
    instance_create(116 + 1, view_hview[0] - 156 + 15, Key_Right); // 156
}
//instance_create(0,0,oLighting);
key_right = 0;
key_left = 0;
key_up = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Move the Player
if(!can_move) exit;

// Enable platform movement actions
enable_movement_platform_actions(.5, 4, 12, keyboard_check(vk_right), keyboard_check(vk_left), keyboard_check_pressed(vk_up), keyboard_check_released(vk_up));
//enable_movement_platform_actions(.5, 4, 12, key_left, key_right, key_up, key_up);

// This script might not work for every kind of sprite set but it will work for a basic
// set and will show how you could get started if you want to add more
enable_movement_platform_sprites(s_player_idle, s_player_walk, s_player_jump, .25);
//enable_movement_platform_sprites(spr_player_idle, spr_player_run, spr_player_jump, .25);

// Move the entity
move_movement_entity();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Game settings.
if(place_meeting(x, y, Key)){
    with (Key){
        if(!pick){
            pick = true;
            audio_play_sound(sn_key, 0, 0);
        }
    }
}

// Draw door entry.
    if(in_Rectangle(Door.x, Door.y - Door.sprite_height/2, Door.x + Door.sprite_width, Door.y + Door.sprite_height/2) and mouse_check_button_pressed(mb_left)){            
        if(place_meeting(x,y, Door)){
            
            if(!has_key){
                if(audio_is_playing(sn_locked)){
                    audio_stop_sound(sn_locked);
                }
                audio_play_sound(sn_locked, 1, 0);
            }else{
                    var dn = instance_nearest(x, y, Door);
                    with (dn) { 
                        if(!open){
                            open = true; 
                            audio_play_sound(sn_open_door, 1, 0);
                        }
                }
                //can_move = false;
            }
        
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw general things.
if(room != r_menu){
if(!has_key) draw_sprite(spr_inventario, 0, 624+12, 24);
else draw_sprite(spr_inventario, 1, 624+12, 24);
}

if(room != r_menu){

    // Draw pista.
    draw_set_font(font_game_18);
    draw_set_color(c_white);
    draw_text(128-24, 24, string(nivel) + ". " + pistas[nivel-1]);
    
    
    
    if(place_meeting(x, y, Door)){
        draw_sprite(spr_getin, 0, Door.x + Door.sprite_width/2, Door.y);        
    }
    
}
draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="81">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!instance_exists(oLighting)) instance_create(0,0,oLighting);
else with oLighting instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>2</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
